

services:
  app:
    build:
      context: .        # Konteks build adalah root proyek Docker Anda
      dockerfile: Dockerfile # Gunakan Dockerfile di root proyek Anda
    container_name: laravel_apps
    working_dir: /var/www/html
    ports:
      - 9000:9000
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel
    depends_on:
      mysql:
        condition: service_healthy # app hanya akan start jika mysql healthy

  nginx:
    image: nginx:alpine
    container_name: laravel_nginxs
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: laravel_dbs
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: Test-User-API-laravel11
      # MYSQL_USER: root
      # MYSQL_PASSWORD: password
      # SERVICE_TAGS: ${SERVICE_TAGS}
      # SERVICE_NAME: ${SERVICE_NAME}
    # volumes:
    #   - db_data:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 30s # Beri waktu 30 detik untuk inisialisasi awal
  
  # php:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: php
  #   volumes:
  #     - ./src:/var/www/html
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - laravel

  # composer:
  #   image: composer:2.6.2
  #   container_name: composer
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   depends_on:
  #     - php  
  #   networks:
  #     - laravel

  # artisan:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: artisan
  #   volumes:
  #     - ./src:/var/www/html
  #   depends_on:
  #     - mysql
  #   working_dir: /var/www/html
  #   entrypoint: ['php', '/var/www/html/artisan']
  #   networks:
  #     - laravel

# volumes:
#   db_data:

networks:
  laravel:
    # driver: bridge